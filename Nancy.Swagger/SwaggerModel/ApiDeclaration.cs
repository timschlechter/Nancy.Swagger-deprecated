using Newtonsoft.Json;
using System.Collections.Generic;

namespace Nancy.Swagger.Model
{
    public class ApiDeclaration : SwaggerListing
    {
        /// <summary>
        /// Required. A list of the APIs exposed on this resource. There MUST NOT be more than one
        /// API Object per path in the array.
        /// </summary>
        [JsonProperty("apis", Required = Required.Always)]
        public IEnumerable<Api> Apis { get; set; }

        /// <summary>
        /// Required. The root URL serving the API. This field is important as while it is common to
        /// have the Resource Listing and API Declarations on the server providing the APIs
        /// themselves, it is not a requirement. The API specifications can be served using static
        /// files and not generated by the API server itself, so the URL for serving the API cannot
        /// always be derived from the URL serving the API specification. The value SHOULD be in the
        /// format of a URL.
        /// </summary>
        [JsonProperty("basePath", Required = Required.Always)]
        public string BasePath { get; set; }

        /// <summary>
        /// A list of MIME types the APIs on this resource can consume. This is global to all APIs
        /// but can be overridden on specific API calls.
        /// </summary>
        [JsonProperty("consumes")]
        public IEnumerable<string> Consumes { get; set; }

        /// <summary>
        /// A list of the models available to this resource. Note that these need to be exposed
        /// separately for each API Declaration.
        /// </summary>
        [JsonProperty("models")]
        public Dictionary<string, Model> Models { get; set; }

        /// <summary>
        /// A list of MIME types the APIs on this resource can produce. This is global to all APIs
        /// but can be overridden on specific API calls.
        /// </summary>
        [JsonProperty("produces")]
        public IEnumerable<string> Produces { get; set; }

        /// <summary>
        /// The relative path to the resource, from the basePath, which this API Specification
        /// describes. The value MUST precede with a forward slash ("/").
        /// </summary>
        [JsonProperty("resourcePath", Required = Required.Always)]
        public string ResourcePath { get; set; }
    }
}